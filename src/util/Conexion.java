package util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class Conexion implements AutoCloseable {

    private static Connection con = null;
    private static Conexion db;

    private String url = "jdbc:postgresql://localhost:5432/";
    private String dbName = "facturas";
    private String driver = "org.postgresql.Driver";
    private String userName = "postgres";
    private String password = "postgre";

    public Conexion() {
        try {
            Class.forName(driver).newInstance();
            con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
        } catch (InstantiationException | IllegalAccessException | ClassNotFoundException | SQLException e) {
            System.out.println("Error al intentar establecer la conexión: " + e.getMessage());
        }
    }

    public static Conexion getConexion() {
        if (db == null) {
            db = new Conexion();
        }
        return db;
    }

    public PreparedStatement preparedStatement(String sql) throws SQLException {
        return con.prepareStatement(sql);
    }

    public PreparedStatement preparedStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return con.prepareStatement(sql, autoGeneratedKeys);
    }

    public void setAutoCommit(boolean isAuto) throws SQLException {
        con.setAutoCommit(isAuto);
    }

    public void commit() throws SQLException {
        con.commit();
    }

    public void rollback() {
        try {
            con.rollback();
        } catch (SQLException ex) {
            System.out.println("Error al ejecutar rollback: " + ex.getMessage());
        }
    }

    @Override
    public void close() {
        try {
            if (con != null) {
                con.close();
            }
        } catch (SQLException e) {
            System.out.println("Error al intentar cerrar la conexión: " + e.getMessage());
        }
    }

}
